var search_data = {
    'index': {
        'searchIndex': ["wrep","wrep\\notificare","wrep\\notificare\\apns","wrep\\notificare\\apns\\feedback","wrep\\notificare\\apns\\certificate","wrep\\notificare\\apns\\feedback\\feedback","wrep\\notificare\\apns\\feedback\\tuple","wrep\\notificare\\apns\\gateway","wrep\\notificare\\apns\\gatewayfactory","wrep\\notificare\\apns\\message","wrep\\notificare\\apns\\messageenvelope","wrep\\notificare\\apns\\messagefactory","wrep\\notificare\\apns\\sender","wrep\\notificare\\apns\\sslsocket","wrep\\notificare\\apns\\certificate::__construct","wrep\\notificare\\apns\\certificate::getpemfile","wrep\\notificare\\apns\\certificate::haspassphrase","wrep\\notificare\\apns\\certificate::getpassphrase","wrep\\notificare\\apns\\certificate::getendpoint","wrep\\notificare\\apns\\certificate::getfingerprint","wrep\\notificare\\apns\\feedback\\feedback::__construct","wrep\\notificare\\apns\\feedback\\feedback::receive","wrep\\notificare\\apns\\feedback\\tuple::__construct","wrep\\notificare\\apns\\feedback\\tuple::getinvalidatedat","wrep\\notificare\\apns\\feedback\\tuple::getdevicetoken","wrep\\notificare\\apns\\feedback\\tuple::getcertificate","wrep\\notificare\\apns\\gateway::__construct","wrep\\notificare\\apns\\gateway::queue","wrep\\notificare\\apns\\gateway::getqueuelength","wrep\\notificare\\apns\\gateway::flush","wrep\\notificare\\apns\\gatewayfactory::creategateway","wrep\\notificare\\apns\\message::__construct","wrep\\notificare\\apns\\message::getdevicetoken","wrep\\notificare\\apns\\message::getcertificate","wrep\\notificare\\apns\\message::getexpiresat","wrep\\notificare\\apns\\message::setexpiresat","wrep\\notificare\\apns\\message::setalert","wrep\\notificare\\apns\\message::setalertlocalized","wrep\\notificare\\apns\\message::getalert","wrep\\notificare\\apns\\message::setbadge","wrep\\notificare\\apns\\message::clearbadge","wrep\\notificare\\apns\\message::getbadge","wrep\\notificare\\apns\\message::setsound","wrep\\notificare\\apns\\message::getsound","wrep\\notificare\\apns\\message::setcontentavailable","wrep\\notificare\\apns\\message::getcontentavailable","wrep\\notificare\\apns\\message::setpayload","wrep\\notificare\\apns\\message::getpayload","wrep\\notificare\\apns\\message::validatelength","wrep\\notificare\\apns\\message::getjson","wrep\\notificare\\apns\\messageenvelope::__construct","wrep\\notificare\\apns\\messageenvelope::getidentifier","wrep\\notificare\\apns\\messageenvelope::getmessage","wrep\\notificare\\apns\\messageenvelope::getretrylimit","wrep\\notificare\\apns\\messageenvelope::getretryenvelope","wrep\\notificare\\apns\\messageenvelope::setstatus","wrep\\notificare\\apns\\messageenvelope::getstatus","wrep\\notificare\\apns\\messageenvelope::getstatusdescription","wrep\\notificare\\apns\\messageenvelope::getfinalstatus","wrep\\notificare\\apns\\messageenvelope::getfinalstatusdescription","wrep\\notificare\\apns\\messageenvelope::getbinarymessage","wrep\\notificare\\apns\\messagefactory::__construct","wrep\\notificare\\apns\\messagefactory::setdefaultcertificate","wrep\\notificare\\apns\\messagefactory::getdefaultcertificate","wrep\\notificare\\apns\\messagefactory::createmessage","wrep\\notificare\\apns\\sender::__construct","wrep\\notificare\\apns\\sender::setgatewayfactory","wrep\\notificare\\apns\\sender::getgatewayfactory","wrep\\notificare\\apns\\sender::send","wrep\\notificare\\apns\\sender::queue","wrep\\notificare\\apns\\sender::getqueuelength","wrep\\notificare\\apns\\sender::flush","wrep\\notificare\\apns\\sslsocket::__construct","wrep\\notificare\\apns\\sslsocket::getcertificate"],
        'info': [["Wrep","","Wrep.html","","",3],["Wrep\\Notificare","","Wrep\/Notificare.html","","",3],["Wrep\\Notificare\\Apns","","Wrep\/Notificare\/Apns.html","","",3],["Wrep\\Notificare\\Apns\\Feedback","","Wrep\/Notificare\/Apns\/Feedback.html","","",3],["Certificate","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/Certificate.html","","",1],["Feedback","Wrep\\Notificare\\Apns\\Feedback","Wrep\/Notificare\/Apns\/Feedback\/Feedback.html"," < SslSocket","",1],["Tuple","Wrep\\Notificare\\Apns\\Feedback","Wrep\/Notificare\/Apns\/Feedback\/Tuple.html","","",1],["Gateway","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/Gateway.html"," < SslSocket","",1],["GatewayFactory","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/GatewayFactory.html","","",1],["Message","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/Message.html","","",1],["MessageEnvelope","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/MessageEnvelope.html","","",1],["MessageFactory","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/MessageFactory.html","","",1],["Sender","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/Sender.html","","",1],["SslSocket","Wrep\\Notificare\\Apns","Wrep\/Notificare\/Apns\/SslSocket.html","","",1],["Certificate::__construct","Wrep\\Notificare\\Apns\\Certificate","Wrep\/Notificare\/Apns\/Certificate.html#method___construct","(<abbr title=\"Wrep\\Notificare\\Apns\\$pemFile\">$pemFile<\/abbr> $pemFile, <abbr title=\"Wrep\\Notificare\\Apns\\$passphrase\">$passphrase<\/abbr> $passphrase = null, <abbr title=\"Wrep\\Notificare\\Apns\\$endpointEnv\">$endpointEnv<\/abbr> $endpointEnv = self::ENDPOINT_ENV_PRODUCTION)","APNS Certificate constructor",2],["Certificate::getPemFile","Wrep\\Notificare\\Apns\\Certificate","Wrep\/Notificare\/Apns\/Certificate.html#method_getPemFile","()","Get the path to the PEM file",2],["Certificate::hasPassphrase","Wrep\\Notificare\\Apns\\Certificate","Wrep\/Notificare\/Apns\/Certificate.html#method_hasPassphrase","()","Checks if there is a passphrase to use with the certificate",2],["Certificate::getPassphrase","Wrep\\Notificare\\Apns\\Certificate","Wrep\/Notificare\/Apns\/Certificate.html#method_getPassphrase","()","Passphrase to use with the PEM file",2],["Certificate::getEndpoint","Wrep\\Notificare\\Apns\\Certificate","Wrep\/Notificare\/Apns\/Certificate.html#method_getEndpoint","(<abbr title=\"Wrep\\Notificare\\Apns\\$endpointType\">$endpointType<\/abbr> $endpointType = self::ENDPOINT_TYPE_GATEWAY)","Get the endpoint this certificate is valid for",2],["Certificate::getFingerprint","Wrep\\Notificare\\Apns\\Certificate","Wrep\/Notificare\/Apns\/Certificate.html#method_getFingerprint","()","Get a unique hash of the certificate  this can be used",2],["Feedback::__construct","Wrep\\Notificare\\Apns\\Feedback\\Feedback","Wrep\/Notificare\/Apns\/Feedback\/Feedback.html#method___construct","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate)","Construct Connection",2],["Feedback::receive","Wrep\\Notificare\\Apns\\Feedback\\Feedback","Wrep\/Notificare\/Apns\/Feedback\/Feedback.html#method_receive","()","Receive the feedback tuples from APNS",2],["Tuple::__construct","Wrep\\Notificare\\Apns\\Feedback\\Tuple","Wrep\/Notificare\/Apns\/Feedback\/Tuple.html#method___construct","(<abbr title=\"Wrep\\Notificare\\Apns\\Feedback\\$invalidatedAtTimestamp\">$invalidatedAtTimestamp<\/abbr> $invalidatedAtTimestamp, <abbr title=\"Wrep\\Notificare\\Apns\\Feedback\\$deviceToken\">$deviceToken<\/abbr> $deviceToken, <a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate)","Construct Tuple",2],["Tuple::getInvalidatedAt","Wrep\\Notificare\\Apns\\Feedback\\Tuple","Wrep\/Notificare\/Apns\/Feedback\/Tuple.html#method_getInvalidatedAt","()","Moment the device unregistered  Note: Check if the",2],["Tuple::getDeviceToken","Wrep\\Notificare\\Apns\\Feedback\\Tuple","Wrep\/Notificare\/Apns\/Feedback\/Tuple.html#method_getDeviceToken","()","Get the device token of the device that unregistered",2],["Tuple::getCertificate","Wrep\\Notificare\\Apns\\Feedback\\Tuple","Wrep\/Notificare\/Apns\/Feedback\/Tuple.html#method_getCertificate","()","Get the certificate used while receiving this tuple",2],["Gateway::__construct","Wrep\\Notificare\\Apns\\Gateway","Wrep\/Notificare\/Apns\/Gateway.html#method___construct","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate)","Construct Connection",2],["Gateway::queue","Wrep\\Notificare\\Apns\\Gateway","Wrep\/Notificare\/Apns\/Gateway.html#method_queue","(<a href=\"Wrep\/Notificare\/Apns\/Message.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Message\">Message<\/abbr><\/a> $message, <abbr title=\"Wrep\\Notificare\\Apns\\$retryLimit\">$retryLimit<\/abbr> $retryLimit = MessageEnvelope::DEFAULT_RETRY_LIMIT)","Queue a message for sending",2],["Gateway::getQueueLength","Wrep\\Notificare\\Apns\\Gateway","Wrep\/Notificare\/Apns\/Gateway.html#method_getQueueLength","()","Count of all queued messages",2],["Gateway::flush","Wrep\\Notificare\\Apns\\Gateway","Wrep\/Notificare\/Apns\/Gateway.html#method_flush","()","Send all queued messages",2],["GatewayFactory::createGateway","Wrep\\Notificare\\Apns\\GatewayFactory","Wrep\/Notificare\/Apns\/GatewayFactory.html#method_createGateway","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate)","Create a Gateway object",2],["Message::__construct","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method___construct","(<abbr title=\"Wrep\\Notificare\\Apns\\$deviceToken\">$deviceToken<\/abbr> $deviceToken, <a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate)","Construct Message",2],["Message::getDeviceToken","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getDeviceToken","()","Get the device token of the receiving device",2],["Message::getCertificate","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getCertificate","()","Get the certificate that should be used for this message",2],["Message::getExpiresAt","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getExpiresAt","()","Get the moment this message expires",2],["Message::setExpiresAt","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setExpiresAt","(<abbr title=\"Wrep\\Notificare\\Apns\\DateTime\">DateTime<\/abbr> $expiresAt = null)","Set the moment this message should expire or null if",2],["Message::setAlert","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setAlert","(<abbr title=\"Wrep\\Notificare\\Apns\\$body\">$body<\/abbr> $body, <abbr title=\"Wrep\\Notificare\\Apns\\$actionLocKey\">$actionLocKey<\/abbr> $actionLocKey = null, <abbr title=\"Wrep\\Notificare\\Apns\\$launchImage\">$launchImage<\/abbr> $launchImage = null)","Set the alert to display  Also see: http:\/\/developer.apple.com\/library\/ios\/#documentation\/NetworkingInternet\/Conceptual\/RemoteNotificationsPG\/ApplePushService\/ApplePushService.html#\/\/apple_ref\/doc\/uid\/TP40008194-CH100-SW1",2],["Message::setAlertLocalized","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setAlertLocalized","(<abbr title=\"Wrep\\Notificare\\Apns\\$locKey\">$locKey<\/abbr> $locKey, <abbr title=\"Wrep\\Notificare\\Apns\\$locArgs\">$locArgs<\/abbr> $locArgs = array(), <abbr title=\"Wrep\\Notificare\\Apns\\$actionLocKey\">$actionLocKey<\/abbr> $actionLocKey = null, <abbr title=\"Wrep\\Notificare\\Apns\\$launchImage\">$launchImage<\/abbr> $launchImage = null)","Set the localized alert to display  Also see: http:\/\/developer.apple.com\/library\/ios\/#documentation\/NetworkingInternet\/Conceptual\/RemoteNotificationsPG\/ApplePushService\/ApplePushService.html#\/\/apple_ref\/doc\/uid\/TP40008194-CH100-SW1",2],["Message::getAlert","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getAlert","()","Get the current alert",2],["Message::setBadge","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setBadge","(<abbr title=\"Wrep\\Notificare\\Apns\\$badge\">$badge<\/abbr> $badge)","Set the badge to display on the App icon",2],["Message::clearBadge","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_clearBadge","()","Clear the badge from the App icon",2],["Message::getBadge","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getBadge","()","Get the value of the badge as set in this message",2],["Message::setSound","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setSound","(<abbr title=\"Wrep\\Notificare\\Apns\\$sound\">$sound<\/abbr> $sound = &#039;default&#039;)","Set the sound that will be played when this message",2],["Message::getSound","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getSound","()","Get the sound that will be played when this message",2],["Message::setContentAvailable","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setContentAvailable","(<abbr title=\"Wrep\\Notificare\\Apns\\$contentAvailable\">$contentAvailable<\/abbr> $contentAvailable)","Set newsstand content availability flag that will trigger",2],["Message::getContentAvailable","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getContentAvailable","()","Get newsstand content availability flag that will trigger",2],["Message::setPayload","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_setPayload","(<abbr title=\"Wrep\\Notificare\\Apns\\$payload\">$payload<\/abbr> $payload)","Set custom payload to go with the message",2],["Message::getPayload","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getPayload","()","Get the current payload",2],["Message::validateLength","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_validateLength","()","Checks if the length of the message is acceptable for",2],["Message::getJson","Wrep\\Notificare\\Apns\\Message","Wrep\/Notificare\/Apns\/Message.html#method_getJson","()","Get the JSON payload that should be send to the APNS",2],["MessageEnvelope::__construct","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method___construct","(<abbr title=\"Wrep\\Notificare\\Apns\\$identifier\">$identifier<\/abbr> $identifier, <a href=\"Wrep\/Notificare\/Apns\/Message.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Message\">Message<\/abbr><\/a> $message, <abbr title=\"Wrep\\Notificare\\Apns\\$retryLimit\">$retryLimit<\/abbr> $retryLimit = MessageEnvelope::DEFAULT_RETRY_LIMIT)","Construct MessageEnvelope",2],["MessageEnvelope::getIdentifier","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getIdentifier","()","Unique number to the relevant APNS connection to identify",2],["MessageEnvelope::getMessage","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getMessage","()","The message that's is contained by this envelope",2],["MessageEnvelope::getRetryLimit","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getRetryLimit","()","The number of times sending should be retried if it",2],["MessageEnvelope::getRetryEnvelope","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getRetryEnvelope","()","Get the envelope used for the retry",2],["MessageEnvelope::setStatus","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_setStatus","(<abbr title=\"Wrep\\Notificare\\Apns\\$status\">$status<\/abbr> $status, <abbr title=\"Wrep\\Notificare\\Apns\\$envelope\">$envelope<\/abbr> $envelope = null)","Set the status of this message envelope  only possible",2],["MessageEnvelope::getStatus","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getStatus","()","Get the current status of this message envelope",2],["MessageEnvelope::getStatusDescription","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getStatusDescription","()","Get a description of the current status of this message",2],["MessageEnvelope::getFinalStatus","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getFinalStatus","()","Get the final status after all retries  Use this method",2],["MessageEnvelope::getFinalStatusDescription","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getFinalStatusDescription","()","Get a description of the final status after all retries",2],["MessageEnvelope::getBinaryMessage","Wrep\\Notificare\\Apns\\MessageEnvelope","Wrep\/Notificare\/Apns\/MessageEnvelope.html#method_getBinaryMessage","()","Get the message that this envelope contains in binary",2],["MessageFactory::__construct","Wrep\\Notificare\\Apns\\MessageFactory","Wrep\/Notificare\/Apns\/MessageFactory.html#method___construct","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate = null)","Create the MessageFactory",2],["MessageFactory::setDefaultCertificate","Wrep\\Notificare\\Apns\\MessageFactory","Wrep\/Notificare\/Apns\/MessageFactory.html#method_setDefaultCertificate","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $defaultCertificate = null)","Set a default certificate for new messages",2],["MessageFactory::getDefaultCertificate","Wrep\\Notificare\\Apns\\MessageFactory","Wrep\/Notificare\/Apns\/MessageFactory.html#method_getDefaultCertificate","()","Get the current default certificate",2],["MessageFactory::createMessage","Wrep\\Notificare\\Apns\\MessageFactory","Wrep\/Notificare\/Apns\/MessageFactory.html#method_createMessage","(<abbr title=\"Wrep\\Notificare\\Apns\\$deviceToken\">$deviceToken<\/abbr> $deviceToken, <a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate = null)","Create a Message",2],["Sender::__construct","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method___construct","()","Construct Sender",2],["Sender::setGatewayFactory","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method_setGatewayFactory","(<a href=\"Wrep\/Notificare\/Apns\/GatewayFactory.html\"><abbr title=\"Wrep\\Notificare\\Apns\\GatewayFactory\">GatewayFactory<\/abbr><\/a> $gatewayFactory)","Set the gateway factory to use for creating connections",2],["Sender::getGatewayFactory","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method_getGatewayFactory","()","Get the current gateway factory",2],["Sender::send","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method_send","(<a href=\"Wrep\/Notificare\/Apns\/Message.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Message\">Message<\/abbr><\/a> $message)","Queues a message and flushes the gateway connection",2],["Sender::queue","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method_queue","(<a href=\"Wrep\/Notificare\/Apns\/Message.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Message\">Message<\/abbr><\/a> $message, <abbr title=\"Wrep\\Notificare\\Apns\\$retryLimit\">$retryLimit<\/abbr> $retryLimit = MessageEnvelope::DEFAULT_RETRY_LIMIT)","Queue a message on the correct APNS gateway connection",2],["Sender::getQueueLength","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method_getQueueLength","()","Count of all queued messages",2],["Sender::flush","Wrep\\Notificare\\Apns\\Sender","Wrep\/Notificare\/Apns\/Sender.html#method_flush","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate = null)","Send all queued messages",2],["SslSocket::__construct","Wrep\\Notificare\\Apns\\SslSocket","Wrep\/Notificare\/Apns\/SslSocket.html#method___construct","(<a href=\"Wrep\/Notificare\/Apns\/Certificate.html\"><abbr title=\"Wrep\\Notificare\\Apns\\Certificate\">Certificate<\/abbr><\/a> $certificate)","Construct Connection",2],["SslSocket::getCertificate","Wrep\\Notificare\\Apns\\SslSocket","Wrep\/Notificare\/Apns\/SslSocket.html#method_getCertificate","()","Get the certificate used with this connection",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']